{"version":3,"sources":["components/elements/Header/Header.js","config.js","components/elements/HeroImage/HeroImage.js","components/elements/SearchBar/SearchBar.js","components/elements/FourColGrid/FourColGrid.js","components/elements/LoadMoreBtn/LoadMoreBtn.js","components/elements/MovieThumb/MovieThumb.js","components/elements/Spinner/Spinner.js","components/Home/Home.js","components/elements/NotFound/NotFound.js","components/elements/Navigation/Navigation.js","components/elements/MovieInfo/MovieInfo.js","helpers.js","components/elements/MovieInfoBar/MovieInfoBar.js","components/elements/Actor/Actor.js","components/Movie/Movie.js","components/App/App.js","index.js"],"names":["Header","react_default","a","createElement","className","Link","to","src","alt","API_URL","API_KEY","IMAGE_BASE_URL","HeroImage","props","style","background","concat","image","title","text","SearchBar","state","value","timeout","doSearch","event","_this","setState","target","clearTimeout","setTimeout","callback","lib_default","name","size","type","placeholder","onChange","this","Component","FourColGrid","header","loading","children","map","element","i","key","LoadMoreBtn","onClick","MovieThumb","_ref","clickable","movieName","movieId","pathname","Spinner","Home","movies","heroImage","currentPage","totalPages","searchTerm","searchItems","endpoint","fetchItems","loadMoreItems","fetch","then","result","json","Object","toConsumableArray","results","page","total_pages","localStorage","setItem","JSON","stringify","catch","error","console","getItem","parse","objectSpread","_this$state","elements_HeroImage_HeroImage","backdrop_path","original_title","overview","elements_SearchBar_SearchBar","elements_FourColGrid_FourColGrid","elements_MovieThumb_MovieThumb","poster_path","id","elements_Spinner_Spinner","elements_LoadMoreBtn_LoadMoreBtn","NotFound","Navigation","movie","MovieInfo","min","max","optimum","low","high","vote_average","directors","length","convertMoney","money","Intl","NumberFormat","currency","minimumFractionDigits","format","MovieInfoBar","time","hours","Math","floor","mins","calcTime","budget","revenue","Actor","actor","profile_path","character","Movie","actors","laoding","status_code","match","params","crew","filter","member","job","cast","elements_Navigation_Navigation","location","elements_MovieInfo_MovieInfo","elements_MovieInfoBar_MovieInfoBar","runtime","elements_Actor_Actor","App","BrowserRouter","basename","Fragment","elements_Header_Header","Switch","Route","path","component","exact","ReactDOM","render","components_App_App","document","getElementById"],"mappings":"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","file":"static/js/main.e53c13d6.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Header.css';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className=\"rmdb-header\">\r\n            <div className=\"rmdb-header-content\">\r\n              <Link to=\"/\">\r\n                 <img className=\"rmdb-logo\" src= \"./images/reactMovie_logo.png\" alt=\"rmdb_logo\"/>\r\n              </Link>\r\n              <img className=\"rmdb-tmdb-logo\" src=\"./images/tmdb_logo.png\" alt=\"tmdb_logo\" />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","// Configuration for TMDB\n// To se the latest configuration fetch it from https://api.themoviedb.org/3/configuration?api_key=019e8f375549e0bbd4a4191862ebc88f\n\nconst API_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '2260b6dd89cd2283672030d34e164ffd';\n\n// Images\n// An image URL looks like this example:\n// http://image.tmdb.org/t/p/w780/bOGkgRGdhrBYJSLpXaxhXVstddV.jpg\n\nconst IMAGE_BASE_URL ='http://image.tmdb.org/t/p/';\n\n//Sizes: w300, w780, w1280, original\nconst BACKDROP_SIZE = 'w1280';\n\n// w92, w154, w185, w342, w500, w780, original\nconst POSTER_SIZE = 'w500';\n\nexport {\n  API_URL,\n  API_KEY,\n  IMAGE_BASE_URL,\n  BACKDROP_SIZE,\n  POSTER_SIZE\n}","import React from 'react';\r\nimport './HeroImage.css';\r\n\r\nconst HeroImage = (props) => {\r\n    return(\r\n        <div className=\"rmdb-heroimage\"\r\n        style={{\r\n            background:\r\n              `linear-gradient(to bottom, rgba(0,0,0,0)\r\n               39%, rgba(0,0,0,0)\r\n               41%, rgba(0,0,0,0.65)\r\n               100%),\r\n               url('${props.image}'), #1c1c1c`\r\n              \r\n               \r\n        }}\r\n      >\r\n        <div className=\"rmdb-heroimage-content\">\r\n           <div className=\"rmdb-heroimage-text\">\r\n\r\n               <h1>{props.title}</h1>\r\n               <p>{props.text}</p>\r\n\r\n            </div>\r\n         </div>\r\n\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default HeroImage;","import React, { Component } from 'react';\r\nimport FontAwesome from 'react-fontawesome'\r\nimport './SearchBar.css';\r\n\r\nclass SearchBar extends Component {\r\n\r\n    state = {\r\n        value: ''\r\n    }\r\n\r\n    timeout = null;\r\n\r\n    doSearch = (event) => {\r\n        this.setState({ value: event.target.value })\r\n        clearTimeout(this.timeout);\r\n\r\n        this.timeout = setTimeout ( () =>{\r\n            this.props.callback(this.state.value);\r\n        }, 500);\r\n    }\r\n    render(){\r\n        return (\r\n            <div className=\"rmdb-searchbar\">\r\n              <div className=\"rmdb-searchbar-content\">\r\n                <FontAwesome className=\"rmdb-fa-search\" name=\"search\" size=\"2x\" />\r\n                <input\r\n                   type=\"text\"\r\n                   className=\"rmdb-searchbar-input\"\r\n                   placeholder=\"Search\"\r\n                   onChange={this.doSearch}\r\n                   value={this.state.value}\r\n                 />  \r\n            </div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nexport default SearchBar;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './FourColGrid.css';\r\n\r\nconst FourColGrid = (props) => {\r\n\r\n    const renderElements = () => {\r\n         const gridElements = props.children.map( (element, i) => {\r\n             return(\r\n                 <div key={i} className=\"rmdb-grid-element\">\r\n                        {element}\r\n                 </div>\r\n             )\r\n         })\r\n         return gridElements;\r\n    }\r\n\r\n    return (\r\n        <div className=\"rmdb-grid\">\r\n        {props.header && !props.loading ? <h1>{props.header}</h1> : null}\r\n        <div className=\"rmdb-grid-content\">\r\n             {renderElements()}\r\n        </div>\r\n           \r\n        </div>\r\n    )\r\n}\r\n\r\nFourColGrid.propTypes = {\r\n    header: PropTypes.string,\r\n    loading: PropTypes.bool\r\n}\r\n\r\nexport default FourColGrid;","import React from 'react';\r\nimport './LoadMoreBtn.css';\r\n\r\nconst LoadMoreBtn = (props) => {\r\n    return (\r\n        <div className=\"rmdb-loadmorebtn\" onClick={props.onClick}>\r\n           <p>{props.text}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoadMoreBtn;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport './MovieThumb.css';\r\n\r\nconst MovieThumb = ({ image, clickable, movieName, movieId }) => {\r\n    return(\r\n        <div className=\"rmdb-moviethumb\">\r\n          {clickable ? \r\n            <Link to={{pathname: `/${movieId}`, movieName: `${movieName}` }}>\r\n              <img src={image} alt=\"moviethumb\"/>\r\n           </Link>\r\n           :\r\n           <img src={image} alt=\"moviethumb\"/>\r\n          }\r\n        </div>\r\n    )\r\n}\r\n\r\nMovieThumb.propTypes = {\r\n  image : PropTypes.string,\r\n  movieId : PropTypes.number,\r\n  movieName : PropTypes.string\r\n}\r\n\r\nexport default MovieThumb;","import React from 'react';\r\nimport './Spinner.css';\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <div className=\"loader\">\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Spinner;","import React, { Component } from 'react';\r\nimport { API_URL, API_KEY, IMAGE_BASE_URL, POSTER_SIZE, BACKDROP_SIZE } from '../../config';\r\nimport HeroImage from '../elements/HeroImage/HeroImage';\r\nimport SearchBar from '../elements/SearchBar/SearchBar';\r\nimport FourColGrid from '../elements/FourColGrid/FourColGrid';\r\nimport LoadMoreBtn from '../elements/LoadMoreBtn/LoadMoreBtn';\r\nimport MovieThumb from '../elements/MovieThumb/MovieThumb';\r\nimport Spinner from '../elements/Spinner/Spinner';\r\nimport './Home.css';\r\n\r\nclass Home extends Component {\r\n    state = {\r\n        movies: [],\r\n        heroImage: null,\r\n        loading: false,\r\n        currentPage: 0,\r\n        totalPages: 0,\r\n        searchTerm: ''\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (localStorage.getItem('HomeState')) {\r\n            const state = JSON.parse(localStorage.getItem('HomeState'));\r\n            this.setState({...state});\r\n        } else {\r\n            this.setState({ loading: true });\r\n            const endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=1`;\r\n            this.fetchItems(endpoint);\r\n        }\r\n        \r\n    }\r\n\r\n    searchItems = (searchTerm) => {\r\n        let endpoint = \"\";\r\n        this.setState({\r\n            movies:[],\r\n            loading:true,\r\n            searchTerm\r\n        })\r\n\r\n        if(searchTerm === ''){\r\n            endpoint=`${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=1`;\r\n\r\n        }else{\r\n            endpoint=`${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${searchTerm}`;\r\n        }\r\n        this.fetchItems(endpoint);\r\n    }\r\n\r\n    loadMoreItems = () => {\r\n        let endpoint = '';\r\n        this.setState({ loading : true });\r\n\r\n        if(this.state.searchTerm === ''){\r\n\r\n            endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=${this.state.currentPage + 1}`;\r\n\r\n        }else {\r\n            endpoint = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${this.state.searchTerm}&page=${this.state.currentPage + 1}`;\r\n        }\r\n\r\n        this.fetchItems(endpoint);\r\n    }\r\n\r\n    fetchItems = (endpoint) => {\r\n        fetch(endpoint)\r\n        .then(result=> result.json())\r\n        .then(result => {\r\n           this.setState({\r\n            movies: [...this.state.movies, ...result.results],\r\n            heroImage: this.state.heroImage || result.results[0],\r\n            loading: false,\r\n            currentPage: result.page,\r\n            totalPages: result.total_pages,\r\n           }, () => {\r\n               if(this.state.searchTerm === \"\"){\r\n               localStorage.setItem('HomeState', JSON.stringify(this.state));\r\n               }\r\n           })\r\n        })\r\n        .catch(error => console.error('Error:', error));\r\n        \r\n    }\r\n\r\n    render(){\r\n        const { movies, heroImage, loading, currentPage, totalPages, searchTerm } = this.state;\r\n        return (\r\n            <div className=\"rmdb-home\">\r\n            {heroImage ?\r\n               <div>\r\n                 <HeroImage \r\n                   image={`${IMAGE_BASE_URL}${BACKDROP_SIZE}${heroImage.backdrop_path}`}\r\n                   title={heroImage.original_title}\r\n                   text={heroImage.overview}\r\n                 />\r\n                 <SearchBar callback={this.searchItems}/>\r\n               </div> : null }\r\n                <div className=\"rmdb-home-grid\">\r\n                   <FourColGrid\r\n                      header={searchTerm ? 'Serach Result' : 'Popular Movies'}\r\n                      loading={loading}\r\n                      >\r\n                      {movies.map((element,i) => {\r\n                          return <MovieThumb \r\n                                   key={i}\r\n                                   clickable={true}\r\n                                   image={element.poster_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${element.poster_path}` : './images/no_image.jpg'}\r\n                                   movieId={element.id}\r\n                                   movieName={element.original_title}\r\n                                 /> \r\n                            })}\r\n                      </FourColGrid>\r\n                      {loading ? <Spinner /> : null}\r\n                      {(currentPage <= totalPages && !loading) ?\r\n                        <LoadMoreBtn text=\"Load More\" onClick={this.loadMoreItems} />\r\n                        : null}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\n\r\nconst NotFound = () => {\r\n    return(\r\n        <div>\r\n            <h1>Whoops! This page doesn't exist</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NotFound;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Navigation.css';\r\n\r\nconst Navigation = (props) => {\r\n    return(\r\n        <div className=\"rmdb-navigation\">\r\n          <div className=\"rmdb-navigation-content\">\r\n             <Link to=\"/\">\r\n               <p>Home</p>\r\n            </Link>\r\n            <p>/</p>\r\n            <p>{props.movie}</p>\r\n          </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navigation;","import React from 'react';\r\nimport { IMAGE_BASE_URL, POSTER_SIZE, BACKDROP_SIZE } from '../../../config';\r\nimport FontAwesome from 'react-fontawesome';\r\nimport MovieThumb from '../MovieThumb/MovieThumb';\r\nimport './MovieInfo.css';\r\n\r\nconst MovieInfo = (props) => {\r\n    return(\r\n        <div className=\"rmdb-movieinfo\"\r\n         style={{\r\n             background: props.movie.backdrop_path ? `url('${IMAGE_BASE_URL}${BACKDROP_SIZE}${props.movie.backdrop_path}')` : '#000'\r\n\r\n         }}\r\n        >\r\n         <div className=\"rmdb-movieinfo-content\">\r\n            <div className=\"rmdb-movieinfo-thumb\">\r\n               <MovieThumb\r\n                  image={props.movie.poster_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${props.movie.poster_path}` : './images/no_image.jpg'}\r\n                  clickable={false}\r\n                 />\r\n            </div>\r\n            <div className=\"rmdb-movieinfo-text\">\r\n                <h1>{props.movie.title}</h1>\r\n                <h3>PLOT</h3>\r\n                <p>{props.movie.overview}</p>\r\n                <p1>IMDB RATING</p1>\r\n                <div className=\"rmdb-rating\">\r\n                   <meter min=\"0\" max=\"100\" optimum=\"100\" low=\"40\" high=\"70\" value={props.movie.vote_average * 10}></meter>\r\n                   <p className=\"rmdb-score\">{props.movie.vote_average}</p>  \r\n                </div>\r\n                {props.directors.length > 1 ? <h3>DIRECTORS</h3> : <h3>DIRECTOR</h3>}\r\n                {props.directors.map( (element, i) => {\r\n                    return <p key={i} className=\"rmdb-director\">{element.name}</p>\r\n                } )}\r\n            </div>\r\n            <FontAwesome className=\"fa-film\" name=\"film\" size=\"5x\" />\r\n         </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\nexport default MovieInfo;","// Convert time to hours and minutes\nexport const calcTime = (time) => {\n  const hours = Math.floor(time / 60);\n  const mins = time % 60;\n  return `${hours}h ${mins}m`;\n}\n\n// Convert a number to $ format\nexport const convertMoney = (money) => {\n  var formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 0,\n  });\n  return formatter.format(money);\n}","import React from 'react';\r\nimport { calcTime, convertMoney } from '../../../helpers';\r\nimport FontAwesome from 'react-fontawesome';\r\nimport './MovieInfoBar.css';\r\n\r\nconst MovieInfoBar = (props) => {\r\n    return(\r\n        <div className=\"rmdb-movieinfobar\">\r\n          <div className=\"rmdb-movieinfobar-content\">\r\n             <div className=\"rmdb-movieinfobar-content-col\">\r\n                <FontAwesome className=\"fa-time\" name=\"clock-o\" size=\"2x\" />\r\n                <span className=\"rmdb-movieinfobar-info\" > Running Time: {calcTime(props.time)}</span>\r\n             </div>\r\n             <div className=\"rmdb-movieinfobar-content-col\">\r\n                 <FontAwesome className=\"fa-budget\" name=\"money\" size=\"2x\" />\r\n                 <span className=\"rmdb-movieinfobar-info\" > Budget: {convertMoney(props.budget)}</span>            \r\n             </div>\r\n             <div className=\"rmdb-movieinfobar-content-col\">\r\n                 <FontAwesome className=\"fa-revenue\" name=\"ticket\" size=\"2x\" />\r\n                 <span className=\"rmdb-movieinfobar-info\" > Revenue: {convertMoney(props.revenue)}</span>            \r\n             </div>\r\n          </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MovieInfoBar; ","import React from 'react';\r\nimport { IMAGE_BASE_URL } from '../../../config';\r\nimport './Actor.css';\r\n\r\nconst Actor = (props) => {\r\n    const POSTER_SIZE=\"w154\";\r\n\r\n    return(\r\n        <div className=\"rmdb-actor\">\r\n           <img \r\n              src={props.actor.profile_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${props.actor.profile_path}` : './images/no_image.jpg'}\r\n              alt=\"actorthumb\"\r\n            />\r\n            <span className=\"rmdb-actor-name\">{props.actor.name}</span>\r\n            <span className=\"rmdb-actor-character\">{props.actor.character}</span>\r\n        </div>\r\n    )\r\n}\r\nexport default Actor;","import React, {Component} from 'react';\r\nimport {API_URL, API_KEY} from '../../config';\r\nimport Navigation from '../elements/Navigation/Navigation';\r\nimport MovieInfo from '../elements/MovieInfo/MovieInfo';\r\nimport MovieInfoBar from '../elements/MovieInfoBar/MovieInfoBar';\r\nimport FourColGrid from '../elements/FourColGrid/FourColGrid';\r\nimport Spinner from '../elements/Spinner/Spinner';\r\nimport Actor from '../elements/Actor/Actor';\r\nimport './Movie.css';\r\n\r\nclass Movie extends Component {\r\n  state = {\r\n      movie: null,\r\n      actors: null,\r\n      directors: [],\r\n      laoding: false\r\n  }\r\n\r\n  componentDidMount() {\r\n      if (localStorage.getItem(`${this.props.match.params.movieId}`)){\r\n          const state = JSON.parse(localStorage.getItem(`${this.props.match.params.movieId}`));\r\n          this.setState({...state});\r\n      }else {\r\n        this.setState({ laoding: true })\r\n        //first fetch the movie from API\r\n        const endpoint= `${API_URL}movie/${this.props.match.params.movieId}?api_key=${API_KEY}&language=en-US`;\r\n        this.fetchItems(endpoint);\r\n      }\r\n    \r\n  }\r\n\r\n  fetchItems = (endpoint) => {\r\n    fetch(endpoint)\r\n    .then(result => result.json())\r\n    .then(result => {\r\n        if(result.status_code){\r\n            this.setState({ laoding: false })\r\n        }else{\r\n            this.setState({movie: result}, () => {\r\n                //fetch the Actors from API\r\n                const endpoint = `${API_URL}movie/${this.props.match.params.movieId}/credits?api_key=${API_KEY}`\r\n                 fetch(endpoint)\r\n                 .then(result => result.json())\r\n                 .then(result => {\r\n                     const directors = result.crew.filter( (member) => member.job ===\"Director\" );\r\n\r\n                     this.setState({\r\n                         actors: result.cast,\r\n                         directors,\r\n                         laoding: false\r\n                     }, () => {\r\n                        localStorage.setItem(`${this.props.match.params.movieId}`, JSON.stringify(this.state));\r\n                     })\r\n                 })           \r\n            })\r\n        }\r\n    })\r\n    .catch(error => console.error('Error:', error));\r\n  }\r\n\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"rmdb-movie\">\r\n                { this.state.movie ?\r\n                <div>\r\n                    <Navigation movie={this.props.location.movieName} />\r\n                    <MovieInfo movie={this.state.movie} directors={this.state.directors} />\r\n                    <MovieInfoBar time={this.state.movie.runtime} budget={this.state.movie.budget} revenue={this.state.movie.revenue} />\r\n                </div>\r\n                : null }\r\n                {this.state.actors ? \r\n                <div className=\"rmdb-movie-grid\">\r\n                   <FourColGrid header={'Actors'}>\r\n                      {this.state.actors.map( ( element, i ) => {\r\n                        return <Actor key={i} actor={element} />\r\n                     })} \r\n                    </FourColGrid>\r\n                </div>\r\n                : null }\r\n                {!this.state.actors && !this.state.laoding ? <h1>No Movie Found!</h1> : null}\r\n                {this.state.laoding ? <Spinner /> : null}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Movie;","import React from 'react';\r\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\r\nimport Header from '../elements/Header/Header';\r\nimport Home from '../Home/Home';\r\nimport NotFound from '../elements/NotFound/NotFound';\r\nimport Movie from '../Movie/Movie';\r\n\r\nconst App = () => {\r\n    return (\r\n        <BrowserRouter basename='/rmdbmovie/'>\r\n          <React.Fragment>\r\n              <Header />\r\n              <Switch>\r\n                  <Route path=\"/rmdbmovie/\" component={Home} exact />\r\n                  <Route path=\"/:movieId\" component={Movie} exact />\r\n                  <Route component={NotFound} />\r\n              </Switch>\r\n          </React.Fragment>\r\n         </BrowserRouter>\r\n    )\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}